# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
defaults: &defaults
    working_directory: ~/workspace
    docker:
      # Specify the build base image here.    
      - image: mmosttler/circleci_openjdk_gcloud:8u151-jdk-gcloud-182      

jobs:
  build:
    <<: *defaults
    environment:      
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m    
     # Get the code    
    steps:            
      - checkout

      - run: 
          name: Setup Google App Engine SDK
          command: |
            # retrieve our gcloud service account from the CircleCI environment
            echo $GOOGLE_AUTH | base64 --decode --ignore-garbage > ~/gcp-key.json
            gcloud auth activate-service-account --key-file  ~/gcp-key.json      
            # set the gcloud config environment like current project
            gcloud --quiet config set project $GOOGLE_PROJECT_ID     
            # don't need right now.
            #gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            #gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}            
      - save_cache:
          key: v1-gcloud-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/.config/gcloud

      # Download and cache application dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: mvn dependency:go-offline
      - save_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2 

      - run: mvn appengine:stage

      - persist_to_workspace:
          root: ~/workspace
          paths:
            - pom.xml
            - .springBeans
            - src/*
            - target/*
      
  unit-test:
    <<: *defaults
    steps:        
      - attach-workspace:
          at: ~/workspace
      - restore_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
  
      - run:
          name: Run Unit Tests
          command: mvn test -DskipTests=false
      - run:
          name: Save test results 
          command: |
            mkdir -p ~/junit/ 
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit         
  
  integration-test:
    <<: *defaults
    steps:        
      - attach-workspace:
          at: ~/workspace
      - restore_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
  
      - run:
          name: Run Integration Tests
          command: mvn verify
      - run:
          name: Save test results 
          command: |
            mkdir -p ~/junit/ 
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit         

  deploy-dev:  
    <<: *defaults
    steps:        
      - attach-workspace:
          at: ~/workspace
      - restore_cache:
          key: v1-gcloud-{{ .Environment.CIRCLE_SHA1 }}
          
      - deploy: 
          name: Deploy to DEV
          command: gcloud app deploy target/appengine-staging/app.yaml
      - store_artifacts:
          path: ~/.config/gcloud/logs 
      
  deploy-uat:  
    <<: *defaults
    steps:        
      - attach-workspace:
          at: ~/workspace
      - restore_cache:
          key: v1-gcloud-{{ .Environment.CIRCLE_SHA1 }}
          
      - deploy: 
          name: Deploy to UAT
          command: gcloud app deploy target/appengine-staging/app.yaml --no-promote --no-stop-previous-version

  deploy-loadtest:  
    <<: *defaults
    steps:        
      - attach-workspace:
          at: ~/workspace
      - restore_cache:
          key: v1-gcloud-{{ .Environment.CIRCLE_SHA1 }}

      - deploy: 
          name: Deploy to LOAD TEST
          command: gcloud app deploy target/appengine-staging/app.yaml --no-promote --no-stop-previous-version
            
  deploy-prod:  
    <<: *defaults
    steps:        
      - attach-workspace:
          at: ~/workspace
      - restore_cache:
          key: v1-gcloud-{{ .Environment.CIRCLE_SHA1 }}

      - deploy: 
          name: Deploy to PROD
          command: gcloud app deploy target/appengine-staging/app.yaml --no-promote --no-stop-previous-version

workflows:
  version: 2
  build-deploy-promote:
    jobs:    
      - build
      - unit-test:
          requires:
            - build
      - integration-test:
          requires:
            - build            
      - deploy-dev:
          requires:        
            - unit-test
            - integration-test
            
      - hold-uat:
          type: approval
          requires:
            - deploy-dev
      - deploy-uat:      
          requires:        
            - hold-uat

      - hold-loadtest:      
          type: approval
          requires:
            - unit-test
            - integration-test
      - deploy-loadtest:      
          requires:        
            - hold-loadtest

      - hold-prod:
          type: approval
          requires:
            - unit-test
            - integration-test
            - deploy-uat
            - deploy-loadtest 
      - deploy-prod:
          requires:        
            - hold-prod
      