# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the circleci build base image here.    
      # note: can't use this gcloud image since it doesn't have maven and likely jdk8.  should create custom to combine the 2 images.
      #- image: google/cloud-sdk
      #- image: circleci/openjdk:8u151-jdk
      - image: mmosttler/circleci_openjdk_gcloud:8u151-jdk-gcloud-182      
    working_directory: ~/repo
    environment:      
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m    
    steps:
       # Get the code    
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo
            
      - run: 
          name: Setup Google App Engine SDK
          command: |
            # retrieve our gcloud service account from the CircleCI environment
            echo $GOOGLE_AUTH | base64 --decode --ignore-garbage > ~/gcp-key.json
            gcloud auth activate-service-account --key-file  ~/gcp-key.json      
            # set the gcloud config environment like current project
            gcloud --quiet config set project $GOOGLE_PROJECT_ID     
            # don't need right now.
            #gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            #gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}                

      - save_cache:
          key: v1-gcloud-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/.config/gcloud

      # Download and cache application dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2 

      #- restore_cache:
      #    keys:
      #      - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      #- restore_cache:
      #    keys:
      #      - v1-dependencies-{{ checksum "pom.xml" }}

      - run: mvn -DskipTests=true appengine:stage  

      - save_cache:
          key: v1-assets-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo/target/appengine-staging

  deploy-dev:  
    machine:
        enabled: true
    working_directory: ~/repo
    steps:        
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-gcloud-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
      - restore_cache:
          keys:
            - v1-assets-{{ .Environment.CIRCLE_SHA1 }}
      # Deploy
      - run: 
          name: deploy
          command: |
            cd target/appengine-staging
            gcloud app deploy app.yaml
      
      # run tests!
      #- run: mvn integration-test

  deploy-uat:  
    machine:
        enabled: true
    working_directory: ~/repo
    steps:        
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
      - restore_cache:
          keys:
            - v1-assets-{{ .Environment.CIRCLE_SHA1 }}
      # Deploy
      - run: 
          name: deploy
          command: |
            cd target/appengine-staging
            gcloud app deploy app.yaml

  deploy-loadtest:  
    machine:
        enabled: true
    working_directory: ~/repo
    steps:        
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
      - restore_cache:
          keys:
            - v1-assets-{{ .Environment.CIRCLE_SHA1 }}
      # Deploy
      - run: 
          name: deploy
          command: |
            cd target/appengine-staging
            gcloud app deploy app.yaml
            
  deploy-prod:  
    machine:
        enabled: true
    working_directory: ~/repo
    steps:        
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
      - restore_cache:
          keys:
            - v1-assets-{{ .Environment.CIRCLE_SHA1 }}
      # Deploy
      - run: 
          name: deploy
          command: |
            cd target/appengine-staging
            gcloud app deploy app.yaml
workflows:
  version: 2
  build-deploy-promote:
    jobs:    
      - build      
      - deploy-dev:
          requires:        
            - build
            
      - hold-uat:
          type: approval
          requires:
            - build
            - deploy-dev
      - deploy-uat:      
          requires:        
            - hold-uat

      - hold-loadtest:      
          type: approval
          requires:
            - build
      - deploy-loadtest:      
          requires:        
            - hold-loadtest

      - hold-prod:
          type: approval
          requires:
            - build
            - deploy-uat
            - deploy-loadtest 
      - deploy-prod:
          requires:        
            - hold-prod
      